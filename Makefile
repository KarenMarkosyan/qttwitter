#############################################################################
# Makefile for building: qttwitter
# Generated by qmake (2.01a) (Qt 4.4.0) on: Fri Jun 20 05:23:40 2008
# Project:  qttwitter.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile qttwitter.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include/QtScript -I/usr/include/QtScript -I/usr/include -I. -IMainWindow -IHttp -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtScript -L/usr/lib -lQtGui -L/usr/X11R6/lib -lpng -lSM -lICE -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtNetwork -lQtCore -lz -lm -lrt -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = jsonparser.cpp \
		main.cpp \
		mainWindowDerived.cpp \
		twitterbackendinterface.cpp \
		Http/CacheStoragePolicy.cpp \
		Http/DiscCache.cpp \
		Http/FileStoragePolicy.cpp \
		Http/HttpDownloadManager.cpp \
		Http/HttpFetchFile.cpp \
		MainWindow/mainwindowimpl.cpp \
		twitterjsonparser.cpp moc_mainWindowDerived.cpp \
		moc_twitterbackendinterface.cpp \
		moc_HttpDownloadManager.cpp \
		moc_HttpFetchFile.cpp \
		moc_mainwindowimpl.cpp \
		qrc_images.cpp
OBJECTS       = jsonparser.o \
		main.o \
		mainWindowDerived.o \
		twitterbackendinterface.o \
		CacheStoragePolicy.o \
		DiscCache.o \
		FileStoragePolicy.o \
		HttpDownloadManager.o \
		HttpFetchFile.o \
		mainwindowimpl.o \
		twitterjsonparser.o \
		moc_mainWindowDerived.o \
		moc_twitterbackendinterface.o \
		moc_HttpDownloadManager.o \
		moc_HttpFetchFile.o \
		moc_mainwindowimpl.o \
		qrc_images.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		qttwitter.pro
QMAKE_TARGET  = qttwitter
DESTDIR       = 
TARGET        = qttwitter

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_login.h ui_mainWindow.h ui_sendTwit.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: qttwitter.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtScript.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl
	$(QMAKE) -unix -o Makefile qttwitter.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtScript.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile qttwitter.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qttwitter1.0.0 || $(MKDIR) .tmp/qttwitter1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qttwitter1.0.0/ && $(COPY_FILE) --parents jsonparser.h mainWindowDerived.h twitterbackendinterface.h blog/blog.h Http/CacheStoragePolicy.h Http/DiscCache.h Http/FileStoragePolicy.h Http/HttpDownloadManager.h Http/HttpFetchFile.h Http/StoragePolicy.h MainWindow/mainwindowimpl.h Ui/login.h Ui/mainWindow.h Ui/sendTwit.h Http/HttpDownloadManager.moc Http/HttpFetchFile.moc twitterjsonparser.h .tmp/qttwitter1.0.0/ && $(COPY_FILE) --parents images/images.qrc .tmp/qttwitter1.0.0/ && $(COPY_FILE) --parents jsonparser.cpp main.cpp mainWindowDerived.cpp twitterbackendinterface.cpp Http/CacheStoragePolicy.cpp Http/DiscCache.cpp Http/FileStoragePolicy.cpp Http/HttpDownloadManager.cpp Http/HttpFetchFile.cpp MainWindow/mainwindowimpl.cpp twitterjsonparser.cpp .tmp/qttwitter1.0.0/ && $(COPY_FILE) --parents Ui/login.ui Ui/mainWindow.ui Ui/sendTwit.ui .tmp/qttwitter1.0.0/ && (cd `dirname .tmp/qttwitter1.0.0` && $(TAR) qttwitter1.0.0.tar qttwitter1.0.0 && $(COMPRESS) qttwitter1.0.0.tar) && $(MOVE) `dirname .tmp/qttwitter1.0.0`/qttwitter1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qttwitter1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainWindowDerived.cpp moc_twitterbackendinterface.cpp moc_HttpDownloadManager.cpp moc_HttpFetchFile.cpp moc_mainwindowimpl.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainWindowDerived.cpp moc_twitterbackendinterface.cpp moc_HttpDownloadManager.cpp moc_HttpFetchFile.cpp moc_mainwindowimpl.cpp
moc_mainWindowDerived.cpp: mainWindowDerived.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainWindowDerived.h -o moc_mainWindowDerived.cpp

moc_twitterbackendinterface.cpp: Http/HttpDownloadManager.h \
		Http/HttpFetchFile.h \
		Http/CacheStoragePolicy.h \
		Http/DiscCache.h \
		Http/StoragePolicy.h \
		twitterbackendinterface.h
	/usr/bin/moc $(DEFINES) $(INCPATH) twitterbackendinterface.h -o moc_twitterbackendinterface.cpp

moc_HttpDownloadManager.cpp: Http/HttpFetchFile.h \
		Http/HttpDownloadManager.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Http/HttpDownloadManager.h -o moc_HttpDownloadManager.cpp

moc_HttpFetchFile.cpp: Http/HttpFetchFile.h
	/usr/bin/moc $(DEFINES) $(INCPATH) Http/HttpFetchFile.h -o moc_HttpFetchFile.cpp

moc_mainwindowimpl.cpp: mainWindowDerived.h \
		ui_mainWindow.h \
		MainWindow/mainwindowimpl.h
	/usr/bin/moc $(DEFINES) $(INCPATH) MainWindow/mainwindowimpl.h -o moc_mainwindowimpl.cpp

compiler_rcc_make_all: qrc_images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_images.cpp
qrc_images.cpp: images/images.qrc \
		images/questionmark \
		images/user-offline.svg \
		images/help-about.svg \
		images/twhitter_btn_03.png \
		images/twitter_system_tray.png \
		images/application-exit.svg \
		images/Twitter.png \
		images/personal.svg \
		images/remove-profile.svg \
		images/TwitterPostIcon.png \
		images/twhitter_btn_02.png \
		images/configure.svg \
		images/qt.png \
		images/im-status-message-edit.svg \
		images/user-online.svg \
		images/icon.facebook.png \
		images/print.jpeg \
		images/twitter_system_tray_2.0.png \
		images/add-profile.svg \
		images/message-unread.svg
	/usr/bin/rcc -name images images/images.qrc -o qrc_images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_login.h ui_mainWindow.h ui_sendTwit.h
compiler_uic_clean:
	-$(DEL_FILE) ui_login.h ui_mainWindow.h ui_sendTwit.h
ui_login.h: Ui/login.ui
	/usr/bin/uic Ui/login.ui -o ui_login.h

ui_mainWindow.h: Ui/mainWindow.ui
	/usr/bin/uic Ui/mainWindow.ui -o ui_mainWindow.h

ui_sendTwit.h: Ui/sendTwit.ui
	/usr/bin/uic Ui/sendTwit.ui -o ui_sendTwit.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

jsonparser.o: jsonparser.cpp jsonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jsonparser.o jsonparser.cpp

main.o: main.cpp MainWindow/mainwindowimpl.h \
		mainWindowDerived.h \
		ui_mainWindow.h \
		ui_login.h \
		ui_sendTwit.h \
		twitterbackendinterface.h \
		Http/HttpDownloadManager.h \
		Http/HttpFetchFile.h \
		Http/CacheStoragePolicy.h \
		Http/DiscCache.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainWindowDerived.o: mainWindowDerived.cpp mainWindowDerived.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainWindowDerived.o mainWindowDerived.cpp

twitterbackendinterface.o: twitterbackendinterface.cpp twitterbackendinterface.h \
		Http/HttpDownloadManager.h \
		Http/HttpFetchFile.h \
		Http/CacheStoragePolicy.h \
		Http/DiscCache.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o twitterbackendinterface.o twitterbackendinterface.cpp

CacheStoragePolicy.o: Http/CacheStoragePolicy.cpp Http/CacheStoragePolicy.h \
		Http/DiscCache.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CacheStoragePolicy.o Http/CacheStoragePolicy.cpp

DiscCache.o: Http/DiscCache.cpp Http/DiscCache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DiscCache.o Http/DiscCache.cpp

FileStoragePolicy.o: Http/FileStoragePolicy.cpp Http/FileStoragePolicy.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FileStoragePolicy.o Http/FileStoragePolicy.cpp

HttpDownloadManager.o: Http/HttpDownloadManager.cpp Http/HttpDownloadManager.h \
		Http/HttpFetchFile.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HttpDownloadManager.o Http/HttpDownloadManager.cpp

HttpFetchFile.o: Http/HttpFetchFile.cpp Http/HttpFetchFile.h \
		Http/StoragePolicy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HttpFetchFile.o Http/HttpFetchFile.cpp

mainwindowimpl.o: MainWindow/mainwindowimpl.cpp MainWindow/mainwindowimpl.h \
		mainWindowDerived.h \
		ui_mainWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindowimpl.o MainWindow/mainwindowimpl.cpp

twitterjsonparser.o: twitterjsonparser.cpp twitterjsonparser.h \
		jsonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o twitterjsonparser.o twitterjsonparser.cpp

moc_mainWindowDerived.o: moc_mainWindowDerived.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainWindowDerived.o moc_mainWindowDerived.cpp

moc_twitterbackendinterface.o: moc_twitterbackendinterface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_twitterbackendinterface.o moc_twitterbackendinterface.cpp

moc_HttpDownloadManager.o: moc_HttpDownloadManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_HttpDownloadManager.o moc_HttpDownloadManager.cpp

moc_HttpFetchFile.o: moc_HttpFetchFile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_HttpFetchFile.o moc_HttpFetchFile.cpp

moc_mainwindowimpl.o: moc_mainwindowimpl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindowimpl.o moc_mainwindowimpl.cpp

qrc_images.o: qrc_images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_images.o qrc_images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

